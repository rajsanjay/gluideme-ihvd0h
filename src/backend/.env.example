# Django Core Settings
# Required for cryptographic signing - generate using django.core.management.utils.get_random_secret_key()
DJANGO_SECRET_KEY=your-secret-key-here

# Debug mode - must be False in production
DJANGO_DEBUG=False

# Comma-separated list of allowed hosts
DJANGO_ALLOWED_HOSTS=example.com,api.example.com

# Database Configuration
# Format: postgres://user:pass@host:port/dbname
DATABASE_URL=postgres://user:password@localhost:5432/transfer_requirements

# Redis Configuration
# Format: redis://user:pass@host:port/db
REDIS_URL=redis://localhost:6379/0

# CORS Configuration
# Comma-separated list of allowed origins
CORS_ALLOWED_ORIGINS=https://example.com,https://admin.example.com

# AWS Configuration
AWS_ACCESS_KEY_ID=your-access-key-id
AWS_SECRET_ACCESS_KEY=your-secret-access-key
AWS_STORAGE_BUCKET_NAME=your-bucket-name
AWS_S3_REGION_NAME=us-west-2

# Search Services Configuration
# MeiliSearch settings
MEILISEARCH_HOST=http://localhost:7700
MEILISEARCH_API_KEY=your-meilisearch-api-key

# Pinecone settings
PINECONE_API_KEY=your-pinecone-api-key
PINECONE_ENVIRONMENT=your-environment-name

# Celery Configuration
# Broker URL (can use Redis or RabbitMQ)
CELERY_BROKER_URL=redis://localhost:6379/1
# Result backend (recommended to use Redis)
CELERY_RESULT_BACKEND=redis://localhost:6379/2

# Additional Security Settings
# Set to 'Strict' in production
SECURE_SSL_REDIRECT=True
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=True
SECURE_HSTS_PRELOAD=True
SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True