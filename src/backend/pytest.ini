[pytest]
# Test discovery paths
testpaths = 
    apps
    api
    utils
    celery

# Test file patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Django settings and test execution options
addopts = 
    --ds=config.settings.test
    --reuse-db
    --cov=.
    --cov-report=xml
    --cov-report=term-missing
    --cov-fail-under=90
    --no-cov-on-fail
    -v

# Test markers for categorizing tests
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::django.utils.deprecation.RemovedInDjango51Warning

# Django configuration
DJANGO_SETTINGS_MODULE = config.settings.test

# Disable warnings from third-party packages
# Required by pytest-django>=4.5.0
django_debug_mode = False

# Fail on uncaught warnings
# This helps maintain a clean test suite
filterwarnings =
    error
    # Ignore specific warnings that are known and accepted
    ignore::DeprecationWarning
    ignore::django.utils.deprecation.RemovedInDjango51Warning
    ignore::pytest.PytestUnknownMarkWarning

# Strict marker validation
# Ensures all markers are registered
addopts = 
    --strict-markers
    --ds=config.settings.test
    --reuse-db
    --cov=.
    --cov-report=xml
    --cov-report=term-missing
    --cov-fail-under=90
    --no-cov-on-fail
    -v

# Test coverage configuration
# Ensures comprehensive test coverage
[coverage:run]
source = .
omit =
    */migrations/*
    */tests/*
    */test_*.py
    manage.py
    wsgi.py
    asgi.py
    */settings/*
    */urls.py
    */__init__.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError